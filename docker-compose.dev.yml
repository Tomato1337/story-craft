version: '3.8'
# !!! Сервисы называем с суффиксом -dev
# !!! Для внутренних сервисов добавляем сеть backend
networks:
  frontend:
  backend:
    internal: true
services:
  api-gateway-dev:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile.dev
    # volumes:
    #   - ./services/api-gateway:/app
    #   - /app/node_modules
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    environment:
      - PORT=${API_GATEWAY_PORT}
      - NODE_ENV=dev
      - PORT_AUTH_SERVICE=${AUTH_SERVICE_PORT}
      - PORT_STORY_SERVICE=${STORY_SERVICE_PORT}
      - PORT_USER_SERVICE=${USER_SERVICE_PORT}
      - PORT_MEDIA_SERVICE=${MEDIA_SERVICE_PORT}
      - PORT_SOCIAL_SERVICE=${SOCIAL_SERVICE_PORT}
      - PORT_NOTIFICATION_SERVICE=${NOTIFICATION_SERVICE_PORT}
    # develop:
    #   watch:
    #     - action: sync
    #       path: ./services/api-gateway
    #       target: /app
    #       ignore:
    #         - node_modules/
    #     - action: rebuild
    #       path: ./services/api-gateway/package.json
    depends_on:
      - auth-service-dev
    env_file:
      - .env
    networks:
      - frontend
      - backend

  auth-service-dev:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile.dev
    # volumes:
    #   - ./services/auth-service:/app
    #   - /app/node_modules
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    environment:
      - PORT=${AUTH_SERVICE_PORT}
      - NODE_ENV=dev
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/storycraft_auth
    # develop:
    #   watch:
    #     - action: sync
    #       path: ./services/auth-service
    #       target: /app
    #       ignore:
    #         - node_modules/
    #     - action: rebuild
    #       path: ./services/auth-service/package.json
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - backend
  

  user-profile-service-dev:
    build:
      context: ./services/user-profile-service
      dockerfile: Dockerfile
    # volumes:
    #   - ./services/auth-service:/app
    #   - /app/node_modules
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    # develop:
    #   watch:
    #     - action: sync
    #       path: ./services/user-profile-service
    #       target: /app
    #     - action: rebuild
    #       path: ./services/user-profile-service/go.mod
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - backend